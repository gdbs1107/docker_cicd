name: Docker_CD

on:
  push:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: "adopt"

      # application.yml 생성 (dev, release에 따라 다른 application 추가 해야함)
      # 환경변수 전부 따로 관리하고 쓰기 VS application.yml 직접 넣기 뭐가 좋을지 고민해보기
      - name: Make application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.PROPERTIES }}" > src/main/resources/application.yml

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test


      - name: Docker build_push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}


      # 현재는 도커만 사용한 버전, 추후 도커 컴포즈를 사용하게 되면 많이 수정해야함
      - name: EC2_deploy
        uses: appleboy/ssh-action@master
        id: deploy
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sudo docker rm -f $(sudo docker ps -qa) || true
            sudo docker pull ${{ secrets.DOCKER_REPO }}
            sudo docker run -d -p 8080:8080 --name myapp ${{ secrets.DOCKER_REPO }}
            sudo docker image prune -f
